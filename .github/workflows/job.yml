name: Deploy
on:
  push:
    branches: [develop]
env:
  BEFORE_SHA: "${{ github.event.before }}"
  AFFECTED_APP: ""
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      affected-output: ${{ steps.affected-apps.outputs.apps }}
      apps-array: ${{ steps.split.outputs }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16      

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependecy
        run: yarn install

      - name: Set base and head commits
        uses: nrwl/nx-set-shas@v2

      - name: Run Affected Test-Release         
        run: yarn affected:test
        #run: npm run affected:test --base=develop  

      - name: Get affected apps
        id: affected-apps
        run: echo "::set-output name=apps::$(npx nx print-affected --target=build --select=projects)"
        #run: echo AFFECTED_APP=$(npx nx print-affected --target=build --select=projects) >> $GITHUB_ENV        
        #run: |
        #  echo "::set-output name=apps::$(nx print-affected --target=build --select=projects --base=develop --head=HEAD)" 

      - uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ steps.affected-apps.outputs.apps }}
          separator: ","
  
      #- name: 'Print CENTAURO'
      #  if: ${{ contains(env.AFFECTED_APP, 'centauro-bff') }}
      #  uses: ./.github/workflows/centauro-action.yml
      #  #run: echo CENTAUROOOOOO
#
      #- name: 'Print NIKE'
      #  if: ${{ contains(env.AFFECTED_APP, 'nike-bff') }}
      #  uses: ./.github/workflows/nike-action.yml
      #  #run: echo NIKEEEEEEE    


  chama-centauro:
    needs: [build]    
    if: ${{ contains( needs.build.outputs.affected-output, 'centauro-bff') }}
    uses: ./.github/workflows/centauro-action.yml
    #run: echo CENTAUROOOOOO

  chama-nike:
    needs: [build]    
    if: ${{ contains( needs.build.outputs.affected-output, 'nike-bff') }}
    uses: ./.github/workflows/nike-action.yml
    #run: echo NIKEEEEEEE      

  #chama-generic:
  #  needs: [build]
  #  uses: ./.github/workflows/generic.yml
  #  with:
  #    affected-apps: ${{ needs.build.outputs.affected-output }}

  chama-loop:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        apps: ${{ fromJSON(needs.build.outputs.apps-array) }}    
    steps:
      - uses: ./.github/workflows/generic.yml
        with:
          affected-apps: ${{ matrix.apps }}
    